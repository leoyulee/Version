[{"title":"Version","type":0,"sectionRef":"#","url":"api/Version","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Version","url":"api/Version#properties","content":" "},{"title":"MajorVersion​","type":1,"pageTitle":"Version","url":"api/Version#MajorVersion","content":"&lt;/&gt; Version.MajorVersion: number The number representing which major version is represented. Different major versions indicate &quot;when you make incompatible API changes.&quot;  "},{"title":"MinorVersion​","type":1,"pageTitle":"Version","url":"api/Version#MinorVersion","content":"&lt;/&gt; Version.MinorVersion: number The number representing which minor version is represented. Different minor versions indicate &quot;when you add functionality in a backwards compatible manner.&quot;  "},{"title":"PatchVersion​","type":1,"pageTitle":"Version","url":"api/Version#PatchVersion","content":"&lt;/&gt; Version.PatchVersion: number The number representing which patch version is represented. Different patch versions indicate &quot;when you make backwards compatible bug fixes.&quot; "},{"title":"Functions​","type":1,"pageTitle":"Version","url":"api/Version#functions","content":" "},{"title":"__concat​","type":1,"pageTitle":"Version","url":"api/Version#__concat","content":"Metamethod &lt;/&gt; Version.__concat( value1: any, value2: any ) → string-- Concatinates values via &quot;string.format(&quot;%s%s&quot;,tostring(value1),tostring(value2))&quot;   "},{"title":"new​","type":1,"pageTitle":"Version","url":"api/Version#new","content":"&lt;/&gt; Version.new( MajorVersion: string-- A string in the format of &quot;[Version.MajorVersion].[Version.MinorVersion].[Version.PatchVersion]&quot;. ) → Version-- A new version object. Creates a new Version datatype object from Version.fromString  "},{"title":"new​","type":1,"pageTitle":"Version","url":"api/Version#new","content":"&lt;/&gt; Version.new( MajorVersion: number,-- The number representing which MajorVersion the new object has. MinorVersion: number,-- The number representing which MinorVersion the new object has. PatchVersion: number-- The number representing which PatchVersion the new object has. ) → Version-- A new version object. Creates a new Version datatype object.  "},{"title":"fromString​","type":1,"pageTitle":"Version","url":"api/Version#fromString","content":"&lt;/&gt; Version.fromString( String: string-- A string in the format of &quot;[Version.MajorVersion].[Version.MinorVersion].[Version.PatchVersion]&quot;. ) → Version-- A new version object. Creates a new Version datatype object.  "},{"title":"getNumbersFromString​","type":1,"pageTitle":"Version","url":"api/Version#getNumbersFromString","content":"&lt;/&gt; Version.getNumbersFromString( String: string-- A string in the format of &quot;[Version.MajorVersion].[Version.MinorVersion].[Version.PatchVersion]&quot;. ) → number,number,number-- The numbers representing the respective versions (MajorVersion,MinorVersion, and PatchVersion respectively). Gets the version numbers from the inputted string and returns them in the order of MajorVersion, MinorVersion, and PatchVersion.  "},{"title":"__tostring​","type":1,"pageTitle":"Version","url":"api/Version#__tostring","content":"Metamethod &lt;/&gt; Version:__tostring() → string-- Returns in the format of &quot;[Version.MajorVersion].[Version.MinorVersion].[Version.PatchVersion]&quot;.   "},{"title":"__eq​","type":1,"pageTitle":"Version","url":"api/Version#__eq","content":"Metamethod &lt;/&gt; Version:__eq(value: Version) → boolean-- Compares both Versions and returns if MajorVersion, MinorVersion, and PatchVersion are the same numbers.   "},{"title":"__lt​","type":1,"pageTitle":"Version","url":"api/Version#__lt","content":"Metamethod &lt;/&gt; Version:__lt(value: Version) → boolean-- Compares both Versions and returns if the current object has precedence over the next Version object. Refer to Specification #11 of Semantic Versioning 2.0.0.   "},{"title":"__le​","type":1,"pageTitle":"Version","url":"api/Version#__le","content":"Metamethod &lt;/&gt; Version:__le(value: Version) → boolean-- Compares both Versions and returns if the current object has precedence over or is equal to the next Version object. Uses Version:__eq and Version:__lt.   "},{"title":"GetMajorVersion​","type":1,"pageTitle":"Version","url":"api/Version#GetMajorVersion","content":"&lt;/&gt; Version:GetMajorVersion() → number-- Version.MajorVersion Returns the Version's Major Version.  "},{"title":"GetMinorVersion​","type":1,"pageTitle":"Version","url":"api/Version#GetMinorVersion","content":"&lt;/&gt; Version:GetMinorVersion() → number-- Version.MinorVersion Returns the Version's Minor Version.  "},{"title":"GetPatchVersion​","type":1,"pageTitle":"Version","url":"api/Version#GetPatchVersion","content":"&lt;/&gt; Version:GetPatchVersion() → number-- Version.PatchVersion Returns the Version's Patch Version.  "},{"title":"Destroy​","type":1,"pageTitle":"Version","url":"api/Version#Destroy","content":"&lt;/&gt; Version:Destroy() → nil Destroys the object to clean up memory. "}]